<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx
 		http://www.springframework.org/schema/tx/spring-tx.xsd"
	   default-lazy-init="false">
	<!--

    	Service Component等注解的支持，解析到这个标签还是默认加上@Autowired等标签的处理器

        <context:annotation-config></context:annotation-config> 也会默认添加@Autowired的处理器，但是不会识别@Service组件

    -->

	<context:component-scan base-package="com.ypg521.tx.transaction">

	</context:component-scan>

	<!--
		<aop:aspectj-autoproxy/>

		即使没有这个标签，tx的解析器也会加一个proxyCreator的
		但是就不能识别切面注解了， 只能识别切面接口
	-->


	<!--
        AnnotationDrivenBeanDefinitionParser
    -->

	<tx:annotation-driven transaction-manager="transactionManager"/>


	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="username" value="root"/>
		<property name="password" value="123456"/>
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/spring_test?useUnicode=true"/>
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	</bean>


	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ypg521.tx.transaction.dao"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:tx/mybatis/*.xml"/>
	</bean>


	<!--


        <tx:advice id="txAdvice" transaction-manager="transactionManager">
            <tx:attributes>
                <tx:method name="bulk*" propagation="REQUIRED" isolation="DEFAULT" />
                <tx:method name="load*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
            </tx:attributes>
        </tx:advice>
        <aop:config>
            <aop:advisor pointcut="execution(* *..*Service*.*(..))" advice-ref="txAdvice" />
        </aop:config>

    -->

	<!--


        <aop:config>
            <aop:pointcut id="allServiceMethods"
                          expression="execution(* com.apress.prospring2.ch16.services.*.*(..))"/>
            <aop:advisor advice-ref="defaultTransactionAdvice"
                         pointcut-ref="allServiceMethods"/>
        </aop:config>


        <tx:advice id="defaultTransactionAdvice" transaction-manager="transactionManager">
            <tx:attributes>
                <tx:method
                        name="*"
                        isolation="DEFAULT"
                        propagation="REQUIRED"
                        no-rollback-for="java.lang.RuntimeException"
                        timeout="100"/>
                <tx:method
                        name="get*"
                        read-only="true"/>
            </tx:attributes>
        </tx:advice>
        -->


</beans>